import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

class Order
{
  private String customer;
  private double amount;
  public Order(String customer,double amount)
  {
   this.customer=customer;
   this.amount=amount;
  }
    public String getCustomer() {
        return customer;
    }
    public double getAmount() {
        return amount;
    }
}
public class Day1Java8Challenge {
    public static void main(String[] args) {
        List<Order> orders= Arrays.asList(
                new Order("Amit", 50),
                new Order("Priya", 120),
                new Order("Amit", 60),
                new Order("Rohit", 80),
                new Order("Priya", 30)
        );
        //Group Order by Customer and sum their amounts
        Map<String,Double>totalByCustomer=orders.stream().
                collect(Collectors.groupingBy(Order::getCustomer,
                Collectors.summingDouble(Order::getAmount)));

        // Filter customers whose total amount exceeds 100
       Map<String,Double>filtered=totalByCustomer.entrySet().stream().
       filter(e-> e.getValue() >100).
       collect(Collectors.toMap(Map.Entry::getKey,Map.Entry::getValue));

       //print the result
        System.out.println(filtered); // Output: {Priya=150.0, Amit=110.0}
    }
}
